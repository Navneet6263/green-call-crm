{"version":3,"file":"static/js/49.c24ef76a.chunk.js","mappings":"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","sources":["components/AnalyticsDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport {\n  TrendingUp,\n  Users,\n  DollarSign,\n  Phone,\n  Mail,\n  Calendar,\n  Clock,\n  Filter,\n  Download,\n  RefreshCw\n} from 'lucide-react';\n\nconst AnalyticsDashboard = ({ darkMode }) => {\n  const [timeRange, setTimeRange] = useState('month');\n  const [isLoading, setIsLoading] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Sample data - in a real app, this would come from your API\n  const leadConversionData = [\n    { name: 'Jan', leads: 65, conversions: 42, rate: 64 },\n    { name: 'Feb', leads: 78, conversions: 50, rate: 64 },\n    { name: 'Mar', leads: 90, conversions: 63, rate: 70 },\n    { name: 'Apr', leads: 81, conversions: 53, rate: 65 },\n    { name: 'May', leads: 95, conversions: 67, rate: 71 },\n    { name: 'Jun', leads: 110, conversions: 80, rate: 73 },\n    { name: 'Jul', leads: 100, conversions: 75, rate: 75 },\n  ];\n\n  const salesPerformanceData = [\n    { name: 'Jan', target: 500000, actual: 425000 },\n    { name: 'Feb', target: 500000, actual: 480000 },\n    { name: 'Mar', target: 550000, actual: 570000 },\n    { name: 'Apr', target: 550000, actual: 540000 },\n    { name: 'May', target: 600000, actual: 650000 },\n    { name: 'Jun', target: 600000, actual: 700000 },\n    { name: 'Jul', target: 650000, actual: 710000 },\n  ];\n\n  const leadSourceData = [\n    { name: 'Website', value: 35 },\n    { name: 'Referral', value: 25 },\n    { name: 'Social Media', value: 20 },\n    { name: 'Email', value: 15 },\n    { name: 'Other', value: 5 },\n  ];\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'];\n\n  const customerGrowthData = [\n    { name: 'Jan', customers: 120 },\n    { name: 'Feb', customers: 135 },\n    { name: 'Mar', customers: 148 },\n    { name: 'Apr', customers: 156 },\n    { name: 'May', customers: 170 },\n    { name: 'Jun', customers: 185 },\n    { name: 'Jul', customers: 200 },\n  ];\n\n  const kpiData = [\n    { title: 'Total Leads', value: '583', change: '+12%', icon: Users, color: '#3b82f6' },\n    { title: 'Conversion Rate', value: '68%', change: '+5%', icon: TrendingUp, color: '#10b981' },\n    { title: 'Avg Deal Size', value: '₹42,500', change: '+8%', icon: DollarSign, color: '#f59e0b' },\n    { title: 'Sales Cycle', value: '18 days', change: '-3 days', icon: Clock, color: '#8b5cf6' },\n  ];\n\n  const recentActivities = [\n    { type: 'call', title: 'Call with Rajesh Kumar', time: '10:30 AM', status: 'completed' },\n    { type: 'email', title: 'Proposal sent to Healthcare Solutions', time: '09:15 AM', status: 'completed' },\n    { type: 'meeting', title: 'Demo meeting with Digital Marketing Hub', time: '02:00 PM', status: 'upcoming' },\n    { type: 'call', title: 'Follow-up call with Amit Patel', time: '04:30 PM', status: 'upcoming' },\n  ];\n\n  const refreshData = () => {\n    setIsLoading(true);\n    // Simulate API call\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, [timeRange]);\n\n  const containerStyle = {\n    padding: '0',\n    background: darkMode ? '#111827' : '#f9fafb',\n    minHeight: '100vh'\n  };\n\n  const cardStyle = {\n    background: darkMode ? '#1f2937' : 'white',\n    borderRadius: '12px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    border: `1px solid ${darkMode ? '#374151' : '#e5e7eb'}`\n  };\n\n  const getActivityIcon = (type) => {\n    switch (type) {\n      case 'call': return <Phone size={16} />;\n      case 'email': return <Mail size={16} />;\n      case 'meeting': return <Calendar size={16} />;\n      default: return <Clock size={16} />;\n    }\n  };\n\n  return (\n    <div style={containerStyle}>\n      {/* Header */}\n      <div style={{ marginBottom: '2rem' }}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '0.5rem' }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n            <TrendingUp style={{ color: '#10b981' }} size={32} />\n            <div>\n              <h1 style={{\n                fontSize: '2rem',\n                fontWeight: '700',\n                color: darkMode ? 'white' : '#1f2937',\n                margin: 0\n              }}>\n                Analytics Dashboard\n              </h1>\n              <p style={{ color: darkMode ? '#9ca3af' : '#6b7280', fontSize: '1.125rem', margin: 0 }}>\n                Track your sales performance and lead conversion metrics\n              </p>\n            </div>\n          </div>\n          <div style={{ display: 'flex', gap: '1rem' }}>\n            <button\n              onClick={() => setShowFilters(!showFilters)}\n              style={{\n                padding: '0.75rem',\n                background: darkMode ? '#374151' : '#f3f4f6',\n                color: darkMode ? '#d1d5db' : '#374151',\n                border: 'none',\n                borderRadius: '8px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              }}\n            >\n              <Filter size={16} />\n              Filters\n            </button>\n            <button\n              onClick={refreshData}\n              style={{\n                padding: '0.75rem',\n                background: darkMode ? '#374151' : '#f3f4f6',\n                color: darkMode ? '#d1d5db' : '#374151',\n                border: 'none',\n                borderRadius: '8px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              }}\n            >\n              <RefreshCw size={16} className={isLoading ? 'animate-spin' : ''} />\n              Refresh\n            </button>\n            <button\n              onClick={() => {}}\n              style={{\n                padding: '0.75rem',\n                background: 'linear-gradient(135deg, #667eea, #764ba2)',\n                color: 'white',\n                border: 'none',\n                borderRadius: '8px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              }}\n            >\n              <Download size={16} />\n              Export\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Time Range Filter */}\n      {showFilters && (\n        <div style={{\n          ...cardStyle,\n          padding: '1rem',\n          marginBottom: '1.5rem',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '1rem'\n        }}>\n          <span style={{ color: darkMode ? '#d1d5db' : '#374151', fontWeight: '500' }}>Time Range:</span>\n          <div style={{ display: 'flex', gap: '0.5rem' }}>\n            {['week', 'month', 'quarter', 'year'].map(range => (\n              <button\n                key={range}\n                onClick={() => setTimeRange(range)}\n                style={{\n                  padding: '0.5rem 1rem',\n                  background: timeRange === range ? \n                    'linear-gradient(135deg, #667eea, #764ba2)' : \n                    darkMode ? '#374151' : '#f3f4f6',\n                  color: timeRange === range ? \n                    'white' : \n                    darkMode ? '#d1d5db' : '#374151',\n                  border: 'none',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  fontWeight: '500'\n                }}\n              >\n                {range.charAt(0).toUpperCase() + range.slice(1)}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* KPI Cards */}\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',\n        gap: '1.5rem',\n        marginBottom: '2rem'\n      }}>\n        {kpiData.map((kpi, index) => {\n          const Icon = kpi.icon;\n          return (\n            <div key={index} style={{ ...cardStyle, padding: '1.5rem' }}>\n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                <div>\n                  <p style={{\n                    fontSize: '0.875rem',\n                    color: darkMode ? '#9ca3af' : '#6b7280',\n                    marginBottom: '0.25rem'\n                  }}>\n                    {kpi.title}\n                  </p>\n                  <p style={{\n                    fontSize: '1.5rem',\n                    fontWeight: '700',\n                    color: darkMode ? 'white' : '#1f2937',\n                    margin: '0 0 0.25rem 0'\n                  }}>\n                    {kpi.value}\n                  </p>\n                  <p style={{\n                    fontSize: '0.875rem',\n                    color: kpi.change.startsWith('+') ? '#10b981' : '#ef4444',\n                    margin: 0\n                  }}>\n                    {kpi.change} vs last {timeRange}\n                  </p>\n                </div>\n                <Icon style={{ color: kpi.color }} size={32} />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Charts */}\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr)',\n        gap: '1.5rem',\n        marginBottom: '2rem'\n      }}>\n        {/* Lead Conversion Chart */}\n        <div style={{ ...cardStyle, padding: '1.5rem' }}>\n          <h3 style={{\n            fontSize: '1.25rem',\n            fontWeight: '600',\n            color: darkMode ? 'white' : '#1f2937',\n            marginTop: 0,\n            marginBottom: '1rem'\n          }}>\n            Lead Conversion Rate\n          </h3>\n          <div style={{ height: '300px' }}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <BarChart\n                data={leadConversionData}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke={darkMode ? '#374151' : '#e5e7eb'} />\n                <XAxis dataKey=\"name\" stroke={darkMode ? '#9ca3af' : '#6b7280'} />\n                <YAxis stroke={darkMode ? '#9ca3af' : '#6b7280'} />\n                <Tooltip \n                  contentStyle={{ \n                    background: darkMode ? '#1f2937' : 'white',\n                    border: `1px solid ${darkMode ? '#374151' : '#e5e7eb'}`,\n                    color: darkMode ? 'white' : '#1f2937'\n                  }} \n                />\n                <Legend />\n                <Bar dataKey=\"leads\" name=\"Total Leads\" fill=\"#3b82f6\" />\n                <Bar dataKey=\"conversions\" name=\"Conversions\" fill=\"#10b981\" />\n                <Line type=\"monotone\" dataKey=\"rate\" name=\"Rate (%)\" stroke=\"#f59e0b\" strokeWidth={2} />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Sales Performance Chart */}\n        <div style={{ ...cardStyle, padding: '1.5rem' }}>\n          <h3 style={{\n            fontSize: '1.25rem',\n            fontWeight: '600',\n            color: darkMode ? 'white' : '#1f2937',\n            marginTop: 0,\n            marginBottom: '1rem'\n          }}>\n            Sales Performance\n          </h3>\n          <div style={{ height: '300px' }}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                data={salesPerformanceData}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" stroke={darkMode ? '#374151' : '#e5e7eb'} />\n                <XAxis dataKey=\"name\" stroke={darkMode ? '#9ca3af' : '#6b7280'} />\n                <YAxis stroke={darkMode ? '#9ca3af' : '#6b7280'} />\n                <Tooltip \n                  contentStyle={{ \n                    background: darkMode ? '#1f2937' : 'white',\n                    border: `1px solid ${darkMode ? '#374151' : '#e5e7eb'}`,\n                    color: darkMode ? 'white' : '#1f2937'\n                  }} \n                  formatter={(value) => `₹${value.toLocaleString()}`}\n                />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"target\" name=\"Target\" stroke=\"#8b5cf6\" strokeWidth={2} />\n                <Line type=\"monotone\" dataKey=\"actual\" name=\"Actual\" stroke=\"#10b981\" strokeWidth={2} />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </div>\n\n      {/* Bottom Row */}\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: '1fr 2fr',\n        gap: '1.5rem'\n      }}>\n        {/* Lead Source Distribution */}\n        <div style={{ ...cardStyle, padding: '1.5rem' }}>\n          <h3 style={{\n            fontSize: '1.25rem',\n            fontWeight: '600',\n            color: darkMode ? 'white' : '#1f2937',\n            marginTop: 0,\n            marginBottom: '1rem'\n          }}>\n            Lead Source Distribution\n          </h3>\n          <div style={{ height: '300px' }}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <PieChart>\n                <Pie\n                  data={leadSourceData}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  labelLine={false}\n                  outerRadius={80}\n                  fill=\"#8884d8\"\n                  dataKey=\"value\"\n                  label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                >\n                  {leadSourceData.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                  ))}\n                </Pie>\n                <Tooltip \n                  contentStyle={{ \n                    background: darkMode ? '#1f2937' : 'white',\n                    border: `1px solid ${darkMode ? '#374151' : '#e5e7eb'}`,\n                    color: darkMode ? 'white' : '#1f2937'\n                  }} \n                />\n                <Legend />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Recent Activities */}\n        <div style={{ ...cardStyle, padding: '1.5rem' }}>\n          <h3 style={{\n            fontSize: '1.25rem',\n            fontWeight: '600',\n            color: darkMode ? 'white' : '#1f2937',\n            marginTop: 0,\n            marginBottom: '1rem'\n          }}>\n            Recent Activities\n          </h3>\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.75rem' }}>\n            {recentActivities.map((activity, index) => (\n              <div key={index} style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: '1rem',\n                padding: '1rem',\n                borderRadius: '8px',\n                background: darkMode ? '#374151' : '#f9fafb',\n                borderLeft: `4px solid ${\n                  activity.type === 'call' ? '#3b82f6' : \n                  activity.type === 'email' ? '#10b981' : '#f59e0b'\n                }`\n              }}>\n                <div style={{\n                  width: '36px',\n                  height: '36px',\n                  borderRadius: '50%',\n                  background: darkMode ? '#1f2937' : 'white',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  color: activity.type === 'call' ? '#3b82f6' : \n                         activity.type === 'email' ? '#10b981' : '#f59e0b'\n                }}>\n                  {getActivityIcon(activity.type)}\n                </div>\n                <div style={{ flex: 1 }}>\n                  <p style={{\n                    fontSize: '0.875rem',\n                    fontWeight: '600',\n                    color: darkMode ? 'white' : '#1f2937',\n                    margin: '0 0 0.25rem 0'\n                  }}>\n                    {activity.title}\n                  </p>\n                  <p style={{\n                    fontSize: '0.75rem',\n                    color: darkMode ? '#9ca3af' : '#6b7280',\n                    margin: 0\n                  }}>\n                    {activity.time}\n                  </p>\n                </div>\n                <span style={{\n                  fontSize: '0.75rem',\n                  fontWeight: '500',\n                  padding: '0.25rem 0.5rem',\n                  borderRadius: '4px',\n                  background: activity.status === 'completed' ? \n                    (darkMode ? '#065f46' : '#d1fae5') : \n                    (darkMode ? '#78350f' : '#fef3c7'),\n                  color: activity.status === 'completed' ? \n                    (darkMode ? '#10b981' : '#047857') : \n                    (darkMode ? '#f59e0b' : '#b45309')\n                }}>\n                  {activity.status === 'completed' ? 'Completed' : 'Upcoming'}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnalyticsDashboard;"],"names":["_ref","darkMode","timeRange","setTimeRange","useState","isLoading","setIsLoading","showFilters","setShowFilters","leadSourceData","name","value","COLORS","kpiData","title","change","icon","Users","color","TrendingUp","DollarSign","Clock","refreshData","setTimeout","useEffect","containerStyle","padding","background","minHeight","cardStyle","borderRadius","boxShadow","border","getActivityIcon","type","_jsx","Phone","size","Mail","Calendar","_jsxs","style","children","marginBottom","display","alignItems","justifyContent","gap","fontSize","fontWeight","margin","onClick","cursor","Filter","RefreshCw","className","Download","map","range","charAt","toUpperCase","slice","gridTemplateColumns","kpi","index","Icon","startsWith","marginTop","height","ResponsiveContainer","width","BarChart","data","leads","conversions","rate","top","right","left","bottom","CartesianGrid","strokeDasharray","stroke","XAxis","dataKey","YAxis","Tooltip","contentStyle","Legend","Bar","fill","Line","strokeWidth","LineChart","target","actual","formatter","toLocaleString","PieChart","Pie","cx","cy","labelLine","outerRadius","label","_ref2","percent","toFixed","entry","Cell","length","flexDirection","time","status","activity","borderLeft","flex"],"sourceRoot":""}