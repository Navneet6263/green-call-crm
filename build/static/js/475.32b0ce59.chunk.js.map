{"version":3,"file":"static/js/475.32b0ce59.chunk.js","mappings":"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","sources":["components/AllLeads.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Users, Mail, Phone, Building, Calendar, Star, User, CheckCircle, Clock, Target } from 'lucide-react';\n\nconst AllLeads = ({ darkMode = false, crmData = {} }) => {\n  const [leads, setLeads] = useState([\n    {\n      id: 1,\n      name: 'Rajesh Kumar',\n      email: 'rajesh@techsolutions.com',\n      phone: '+91 9876543210',\n      company: 'Tech Solutions Pvt Ltd',\n      status: 'qualified',\n      priority: 'high',\n      source: 'Website',\n      value: '₹5,00,000',\n      lastContact: '2024-01-15',\n      assignedTo: null\n    },\n    {\n      id: 2,\n      name: 'Priya Sharma', \n      email: 'priya@digitalmarketing.com',\n      phone: '+91 9876543211',\n      company: 'Digital Marketing Hub',\n      status: 'contacted',\n      priority: 'medium',\n      source: 'Social Media',\n      value: '₹2,50,000',\n      lastContact: '2024-01-14',\n      assignedTo: null\n    },\n    {\n      id: 3,\n      name: 'Amit Patel',\n      email: 'amit@healthcare.com', \n      phone: '+91 9876543212',\n      company: 'Healthcare Solutions',\n      status: 'proposal',\n      priority: 'high',\n      source: 'Referral',\n      value: '₹7,50,000',\n      lastContact: '2024-01-13',\n      assignedTo: null\n    }\n  ]);\n\n  const [selectedLeadId, setSelectedLeadId] = useState(null);\n  const [showAssignDropdown, setShowAssignDropdown] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const assignOptions = ['Navneet Kumar', 'Sales Manager', 'Admin', 'Sales Rep'];\n\n  // Filter leads based on search term\n  const filteredLeads = leads.filter(lead => \n    lead.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    lead.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    lead.company.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    lead.phone.includes(searchTerm) ||\n    lead.status.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleLeadSelect = (leadId) => {\n    if (selectedLeadId === leadId) {\n      setSelectedLeadId(null);\n      setShowAssignDropdown(false);\n    } else {\n      setSelectedLeadId(leadId);\n      setShowAssignDropdown(true);\n    }\n  };\n\n  const assignLeadHandler = (e) => {\n    const assignee = e.target.value;\n    if (assignee && selectedLeadId) {\n      setLeads(prevLeads => \n        prevLeads.map(lead => \n          lead.id === selectedLeadId \n            ? { ...lead, assignedTo: assignee }\n            : lead\n        )\n      );\n      setShowAssignDropdown(false);\n      setSelectedLeadId(null);\n    }\n  };\n\n  const getStatusColor = (status) => {\n    const colors = {\n      'qualified': { bg: '#dcfce7', text: '#16a34a' },\n      'contacted': { bg: '#dbeafe', text: '#2563eb' }, \n      'proposal': { bg: '#fef3c7', text: '#d97706' },\n      'new': { bg: '#f3f4f6', text: '#6b7280' }\n    };\n    return colors[status] || { bg: '#f3f4f6', text: '#6b7280' };\n  };\n\n  const getPriorityColor = (priority) => {\n    const colors = {\n      'high': { bg: '#fee2e2', text: '#dc2626' },\n      'medium': { bg: '#fef3c7', text: '#d97706' },\n      'low': { bg: '#f0f9ff', text: '#0284c7' }\n    };\n    return colors[priority] || { bg: '#f3f4f6', text: '#6b7280' };\n  };\n\n  return (\n    <div style={{\n      minHeight: '100vh',\n      backgroundColor: darkMode ? '#1f2937' : '#f9fafb',\n      padding: '24px',\n      fontFamily: '-apple-system, BlinkMacSystemFont, sans-serif'\n    }}>\n      <div style={{ maxWidth: '1400px', margin: '0 auto' }}>\n        {/* Header */}\n        <div style={{\n          backgroundColor: darkMode ? '#374151' : 'white',\n          borderRadius: '16px',\n          boxShadow: darkMode ? '0 4px 6px -1px rgba(0, 0, 0, 0.3)' : '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n          padding: '32px',\n          marginBottom: '32px',\n          border: darkMode ? '1px solid #4b5563' : '1px solid #e5e7eb'\n        }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: '16px', marginBottom: '8px' }}>\n            <Users size={32} color={darkMode ? '#60a5fa' : '#3b82f6'} />\n            <h1 style={{\n              fontSize: '32px',\n              fontWeight: 'bold',\n              color: darkMode ? 'white' : '#111827',\n              margin: 0\n            }}>\n              All Leads\n            </h1>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <p style={{\n              fontSize: '18px',\n              color: darkMode ? '#d1d5db' : '#6b7280',\n              margin: 0\n            }}>\n              Select a lead to assign to team members\n            </p>\n            \n            {/* Search Bar */}\n            <div style={{ position: 'relative', width: '300px' }}>\n              <input\n                type=\"text\"\n                placeholder=\"Search leads...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                style={{\n                  width: '100%',\n                  padding: '8px 12px 8px 36px',\n                  border: `1px solid ${darkMode ? '#4b5563' : '#d1d5db'}`,\n                  borderRadius: '8px',\n                  backgroundColor: darkMode ? '#1f2937' : 'white',\n                  color: darkMode ? 'white' : '#374151',\n                  fontSize: '14px'\n                }}\n              />\n              <div style={{\n                position: 'absolute',\n                left: '12px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                color: darkMode ? '#9ca3af' : '#6b7280'\n              }}>\n                🔍\n              </div>\n            </div>\n          </div>\n          \n          {/* Assign Dropdown */}\n          {showAssignDropdown && selectedLeadId && (\n            <div style={{\n              marginTop: '1rem',\n              padding: '1rem',\n              backgroundColor: darkMode ? '#4b5563' : '#f3f4f6',\n              borderRadius: '12px',\n              border: `2px solid ${darkMode ? '#60a5fa' : '#3b82f6'}`\n            }}>\n              <p style={{\n                fontSize: '14px',\n                fontWeight: '600',\n                color: darkMode ? '#d1d5db' : '#374151',\n                marginBottom: '0.5rem'\n              }}>\n                Assign Lead #{selectedLeadId} to:\n              </p>\n              <select \n                onChange={assignLeadHandler}\n                style={{\n                  width: '200px',\n                  padding: '0.5rem',\n                  border: `1px solid ${darkMode ? '#374151' : '#d1d5db'}`,\n                  borderRadius: '8px',\n                  backgroundColor: darkMode ? '#1f2937' : 'white',\n                  color: darkMode ? 'white' : '#374151'\n                }}\n              >\n                <option value=\"\">Select team member</option>\n                {assignOptions.map(option => (\n                  <option key={option} value={option}>{option}</option>\n                ))}\n              </select>\n            </div>\n          )}\n        </div>\n\n        {/* Stats */}\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n          gap: '24px',\n          marginBottom: '32px'\n        }}>\n          <div style={{\n            backgroundColor: darkMode ? '#374151' : 'white',\n            borderRadius: '12px',\n            padding: '24px',\n            boxShadow: darkMode ? '0 2px 4px rgba(0, 0, 0, 0.2)' : '0 2px 4px rgba(0, 0, 0, 0.1)',\n            border: darkMode ? '1px solid #4b5563' : '1px solid #e5e7eb'\n          }}>\n            <div style={{ fontSize: '28px', fontWeight: 'bold', color: '#3b82f6' }}>\n              {filteredLeads.length}\n            </div>\n            <div style={{ color: darkMode ? '#d1d5db' : '#6b7280' }}>\n              {searchTerm ? 'Found Leads' : 'Total Leads'}\n            </div>\n          </div>\n          <div style={{\n            backgroundColor: darkMode ? '#374151' : 'white',\n            borderRadius: '12px',\n            padding: '24px',\n            boxShadow: darkMode ? '0 2px 4px rgba(0, 0, 0, 0.2)' : '0 2px 4px rgba(0, 0, 0, 0.1)',\n            border: darkMode ? '1px solid #4b5563' : '1px solid #e5e7eb'\n          }}>\n            <div style={{ fontSize: '28px', fontWeight: 'bold', color: '#22c55e' }}>\n              {filteredLeads.filter(l => l.assignedTo).length}\n            </div>\n            <div style={{ color: darkMode ? '#d1d5db' : '#6b7280' }}>Assigned</div>\n          </div>\n          <div style={{\n            backgroundColor: darkMode ? '#374151' : 'white',\n            borderRadius: '12px',\n            padding: '24px',\n            boxShadow: darkMode ? '0 2px 4px rgba(0, 0, 0, 0.2)' : '0 2px 4px rgba(0, 0, 0, 0.1)',\n            border: darkMode ? '1px solid #4b5563' : '1px solid #e5e7eb'\n          }}>\n            <div style={{ fontSize: '28px', fontWeight: 'bold', color: '#f59e0b' }}>\n              {filteredLeads.filter(l => !l.assignedTo).length}\n            </div>\n            <div style={{ color: darkMode ? '#d1d5db' : '#6b7280' }}>Unassigned</div>\n          </div>\n        </div>\n\n        {/* Leads List */}\n        <div style={{\n          backgroundColor: darkMode ? '#374151' : 'white',\n          borderRadius: '12px',\n          overflow: 'hidden',\n          boxShadow: darkMode ? '0 2px 4px rgba(0,0,0,0.2)' : '0 2px 4px rgba(0,0,0,0.1)'\n        }}>\n          {filteredLeads.length === 0 ? (\n            <div style={{\n              padding: '40px',\n              textAlign: 'center',\n              color: darkMode ? '#9ca3af' : '#6b7280'\n            }}>\n              <div style={{ fontSize: '48px', marginBottom: '16px' }}>🔍</div>\n              <h3 style={{ margin: '0 0 8px 0', fontSize: '18px' }}>No leads found</h3>\n              <p style={{ margin: 0, fontSize: '14px' }}>\n                {searchTerm ? `No results for \"${searchTerm}\"` : 'No leads available'}\n              </p>\n            </div>\n          ) : filteredLeads.map((lead, index) => (\n            <div \n              key={lead.id}\n              onClick={() => handleLeadSelect(lead.id)}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                padding: '20px',\n                borderBottom: index < filteredLeads.length - 1 ? `1px solid ${darkMode ? '#4b5563' : '#e5e7eb'}` : 'none',\n                cursor: 'pointer',\n                transition: 'all 0.2s',\n                backgroundColor: selectedLeadId === lead.id \n                  ? (darkMode ? '#4b5563' : '#f0f9ff') \n                  : 'transparent',\n                borderLeft: selectedLeadId === lead.id \n                  ? `4px solid ${darkMode ? '#60a5fa' : '#3b82f6'}` \n                  : '4px solid transparent'\n              }}\n              onMouseEnter={(e) => {\n                if (selectedLeadId !== lead.id) {\n                  e.currentTarget.style.backgroundColor = darkMode ? '#4b556320' : '#f9fafb';\n                }\n              }}\n              onMouseLeave={(e) => {\n                if (selectedLeadId !== lead.id) {\n                  e.currentTarget.style.backgroundColor = 'transparent';\n                }\n              }}\n            >\n              {/* Avatar */}\n              <div style={{\n                width: '48px',\n                height: '48px',\n                background: 'linear-gradient(135deg, #3b82f6, #8b5cf6)',\n                borderRadius: '50%',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                color: 'white',\n                fontWeight: 'bold',\n                fontSize: '16px',\n                marginRight: '16px',\n                flexShrink: 0\n              }}>\n                {lead.name.split(' ').map(n => n[0]).join('')}\n              </div>\n\n              {/* Lead Info */}\n              <div style={{ flex: 1, minWidth: 0 }}>\n                <div style={{ display: 'flex', alignItems: 'center', gap: '12px', marginBottom: '8px' }}>\n                  <h3 style={{\n                    fontSize: '18px',\n                    fontWeight: '600',\n                    color: darkMode ? 'white' : '#111827',\n                    margin: 0\n                  }}>\n                    {lead.name}\n                  </h3>\n                  <span style={{\n                    padding: '4px 8px',\n                    borderRadius: '12px',\n                    fontSize: '11px',\n                    fontWeight: '600',\n                    backgroundColor: getStatusColor(lead.status).bg,\n                    color: getStatusColor(lead.status).text\n                  }}>\n                    {lead.status.toUpperCase()}\n                  </span>\n                  <span style={{\n                    padding: '4px 8px',\n                    borderRadius: '12px',\n                    fontSize: '11px',\n                    fontWeight: '600',\n                    backgroundColor: getPriorityColor(lead.priority).bg,\n                    color: getPriorityColor(lead.priority).text\n                  }}>\n                    {lead.priority.toUpperCase()}\n                  </span>\n                </div>\n                \n                <div style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '16px',\n                  marginBottom: '8px',\n                  fontSize: '14px',\n                  color: darkMode ? '#d1d5db' : '#6b7280'\n                }}>\n                  <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n                    <Building size={14} />\n                    <span>{lead.company}</span>\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n                    <Mail size={14} />\n                    <span>{lead.email}</span>\n                  </div>\n                  <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n                    <Phone size={14} />\n                    <span>{lead.phone}</span>\n                  </div>\n                </div>\n                \n                <div style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '16px',\n                  fontSize: '13px',\n                  color: darkMode ? '#9ca3af' : '#6b7280'\n                }}>\n                  <span>Source: {lead.source}</span>\n                  <span>Value: {lead.value}</span>\n                  <span>Last Contact: {lead.lastContact}</span>\n                </div>\n              </div>\n\n              {/* Assignment Status & Selection */}\n              <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: '12px',\n                marginLeft: '16px'\n              }}>\n                {lead.assignedTo ? (\n                  <div style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '6px',\n                    color: '#22c55e',\n                    fontSize: '14px',\n                    fontWeight: '600'\n                  }}>\n                    <User size={16} />\n                    <span>{lead.assignedTo}</span>\n                  </div>\n                ) : (\n                  <div style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '6px',\n                    color: darkMode ? '#9ca3af' : '#6b7280',\n                    fontSize: '14px'\n                  }}>\n                    <Clock size={16} />\n                    <span>Unassigned</span>\n                  </div>\n                )}\n                \n                {selectedLeadId === lead.id && (\n                  <CheckCircle size={20} color=\"#3b82f6\" />\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AllLeads;"],"names":["_ref","darkMode","crmData","leads","setLeads","useState","id","name","email","phone","company","status","priority","source","value","lastContact","assignedTo","selectedLeadId","setSelectedLeadId","showAssignDropdown","setShowAssignDropdown","searchTerm","setSearchTerm","filteredLeads","filter","lead","toLowerCase","includes","getStatusColor","bg","text","getPriorityColor","_jsx","style","minHeight","backgroundColor","padding","fontFamily","children","_jsxs","maxWidth","margin","borderRadius","boxShadow","marginBottom","border","display","alignItems","gap","Users","size","color","fontSize","fontWeight","justifyContent","position","width","type","placeholder","onChange","e","target","left","top","transform","marginTop","assignee","prevLeads","map","option","gridTemplateColumns","length","l","overflow","textAlign","index","onClick","handleLeadSelect","leadId","borderBottom","cursor","transition","borderLeft","onMouseEnter","currentTarget","onMouseLeave","height","background","marginRight","flexShrink","split","n","join","flex","minWidth","toUpperCase","Building","Mail","Phone","marginLeft","User","Clock","CheckCircle"],"sourceRoot":""}