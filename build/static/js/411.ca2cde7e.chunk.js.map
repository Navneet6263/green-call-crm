{"version":3,"file":"static/js/411.ca2cde7e.chunk.js","mappings":"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","sources":["components/AILeadScoring.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Brain, Zap, TrendingUp, Target, Star, AlertCircle, CheckCircle, Clock } from 'lucide-react';\n\nconst AILeadScoring = ({ leads = [], darkMode }) => {\n  const [scoredLeads, setScoredLeads] = useState([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [selectedLead, setSelectedLead] = useState(null);\n\n  // AI Scoring Algorithm\n  const calculateAIScore = (lead) => {\n    let score = 0;\n    let factors = [];\n\n    // Company Size Factor (30%)\n    const estimatedValue = lead.estimatedValue || 0;\n    if (estimatedValue > 500000) {\n      score += 30;\n      factors.push({ factor: 'High Value Deal', impact: '+30', color: '#22c55e' });\n    } else if (estimatedValue > 100000) {\n      score += 20;\n      factors.push({ factor: 'Medium Value Deal', impact: '+20', color: '#f59e0b' });\n    } else {\n      score += 10;\n      factors.push({ factor: 'Standard Deal', impact: '+10', color: '#6b7280' });\n    }\n\n    // Industry Factor (20%)\n    const highValueIndustries = ['technology', 'finance', 'healthcare'];\n    if (highValueIndustries.includes(lead.industry?.toLowerCase())) {\n      score += 20;\n      factors.push({ factor: 'High-Value Industry', impact: '+20', color: '#22c55e' });\n    } else {\n      score += 10;\n      factors.push({ factor: 'Standard Industry', impact: '+10', color: '#6b7280' });\n    }\n\n    // Lead Source Factor (15%)\n    const leadSource = lead.leadSource?.toLowerCase() || '';\n    if (leadSource.includes('referral')) {\n      score += 15;\n      factors.push({ factor: 'Referral Source', impact: '+15', color: '#22c55e' });\n    } else if (leadSource.includes('website')) {\n      score += 10;\n      factors.push({ factor: 'Website Source', impact: '+10', color: '#f59e0b' });\n    } else {\n      score += 5;\n      factors.push({ factor: 'Other Source', impact: '+5', color: '#6b7280' });\n    }\n\n    // Engagement Factor (20%)\n    const hasEmail = lead.email && lead.email.includes('@');\n    const hasPhone = lead.phone && lead.phone.length > 8;\n    if (hasEmail && hasPhone) {\n      score += 20;\n      factors.push({ factor: 'Complete Contact Info', impact: '+20', color: '#22c55e' });\n    } else if (hasEmail || hasPhone) {\n      score += 10;\n      factors.push({ factor: 'Partial Contact Info', impact: '+10', color: '#f59e0b' });\n    }\n\n    // Recency Factor (15%)\n    const createdDate = new Date(lead.createdDate || Date.now());\n    const daysSinceCreated = Math.floor((Date.now() - createdDate.getTime()) / (1000 * 60 * 60 * 24));\n    if (daysSinceCreated <= 7) {\n      score += 15;\n      factors.push({ factor: 'Fresh Lead', impact: '+15', color: '#22c55e' });\n    } else if (daysSinceCreated <= 30) {\n      score += 10;\n      factors.push({ factor: 'Recent Lead', impact: '+10', color: '#f59e0b' });\n    } else {\n      score += 5;\n      factors.push({ factor: 'Older Lead', impact: '+5', color: '#ef4444' });\n    }\n\n    // Normalize score to 0-100\n    const finalScore = Math.min(100, Math.max(0, score));\n    \n    return {\n      score: finalScore,\n      factors,\n      priority: finalScore >= 80 ? 'High' : finalScore >= 60 ? 'Medium' : 'Low',\n      recommendation: getRecommendation(finalScore, factors)\n    };\n  };\n\n  const getRecommendation = (score, factors) => {\n    if (score >= 80) {\n      return {\n        action: 'Immediate Follow-up',\n        message: 'High-priority lead! Contact within 24 hours.',\n        icon: Zap,\n        color: '#22c55e'\n      };\n    } else if (score >= 60) {\n      return {\n        action: 'Schedule Follow-up',\n        message: 'Good potential. Follow up within 3 days.',\n        icon: Clock,\n        color: '#f59e0b'\n      };\n    } else {\n      return {\n        action: 'Nurture Campaign',\n        message: 'Add to nurture sequence for future engagement.',\n        icon: Target,\n        color: '#6b7280'\n      };\n    }\n  };\n\n  const analyzeLeads = async () => {\n    setIsAnalyzing(true);\n    \n    // Simulate AI processing time\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    \n    const analyzed = leads.map(lead => ({\n      ...lead,\n      aiAnalysis: calculateAIScore(lead)\n    }));\n    \n    // Sort by AI score (highest first)\n    analyzed.sort((a, b) => b.aiAnalysis.score - a.aiAnalysis.score);\n    \n    setScoredLeads(analyzed);\n    setIsAnalyzing(false);\n  };\n\n  useEffect(() => {\n    if (leads.length > 0) {\n      analyzeLeads();\n    }\n  }, [leads]);\n\n  const getScoreColor = (score) => {\n    if (score >= 80) return '#22c55e';\n    if (score >= 60) return '#f59e0b';\n    return '#ef4444';\n  };\n\n  const getPriorityColor = (priority) => {\n    switch (priority) {\n      case 'High': return { bg: '#dcfce7', text: '#166534', border: '#22c55e' };\n      case 'Medium': return { bg: '#fef3c7', text: '#d97706', border: '#f59e0b' };\n      case 'Low': return { bg: '#fee2e2', text: '#dc2626', border: '#ef4444' };\n      default: return { bg: '#f3f4f6', text: '#6b7280', border: '#9ca3af' };\n    }\n  };\n\n  const containerStyle = {\n    padding: '0',\n    background: darkMode ? '#111827' : '#f9fafb',\n    minHeight: '100vh'\n  };\n\n  const cardStyle = {\n    background: darkMode ? '#1f2937' : 'white',\n    borderRadius: '16px',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    border: `1px solid ${darkMode ? '#374151' : '#e5e7eb'}`\n  };\n\n  return (\n    <div style={containerStyle}>\n      {/* Header */}\n      <div style={{ marginBottom: '2rem' }}>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '1rem', marginBottom: '0.5rem' }}>\n          <Brain style={{ color: '#8b5cf6' }} size={32} />\n          <div>\n            <h1 style={{\n              fontSize: '2rem',\n              fontWeight: '700',\n              color: darkMode ? 'white' : '#1f2937',\n              margin: 0\n            }}>\n              AI Lead Scoring\n            </h1>\n            <p style={{ color: darkMode ? '#9ca3af' : '#6b7280', fontSize: '1.125rem', margin: 0 }}>\n              Intelligent lead prioritization powered by machine learning\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* AI Analysis Status */}\n      {isAnalyzing && (\n        <div style={{ ...cardStyle, padding: '2rem', marginBottom: '2rem', textAlign: 'center' }}>\n          <div style={{\n            width: '60px',\n            height: '60px',\n            border: '4px solid #e5e7eb',\n            borderTop: '4px solid #8b5cf6',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite',\n            margin: '0 auto 1rem'\n          }} />\n          <h3 style={{\n            fontSize: '1.25rem',\n            fontWeight: '600',\n            color: darkMode ? 'white' : '#1f2937',\n            marginBottom: '0.5rem'\n          }}>\n            AI is Analyzing Your Leads...\n          </h3>\n          <p style={{ color: darkMode ? '#9ca3af' : '#6b7280' }}>\n            Processing {leads.length} leads with advanced scoring algorithms\n          </p>\n        </div>\n      )}\n\n      {/* Scored Leads */}\n      {!isAnalyzing && scoredLeads.length > 0 && (\n        <>\n          {/* Summary Stats */}\n          <div style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n            gap: '1.5rem',\n            marginBottom: '2rem'\n          }}>\n            {[\n              { \n                label: 'High Priority', \n                value: scoredLeads.filter(l => l.aiAnalysis.priority === 'High').length,\n                icon: Zap, \n                color: '#22c55e' \n              },\n              { \n                label: 'Medium Priority', \n                value: scoredLeads.filter(l => l.aiAnalysis.priority === 'Medium').length,\n                icon: Target, \n                color: '#f59e0b' \n              },\n              { \n                label: 'Low Priority', \n                value: scoredLeads.filter(l => l.aiAnalysis.priority === 'Low').length,\n                icon: Clock, \n                color: '#ef4444' \n              },\n              { \n                label: 'Avg Score', \n                value: Math.round(scoredLeads.reduce((sum, l) => sum + l.aiAnalysis.score, 0) / scoredLeads.length),\n                icon: TrendingUp, \n                color: '#8b5cf6' \n              }\n            ].map((stat, index) => {\n              const Icon = stat.icon;\n              return (\n                <div key={index} style={{ ...cardStyle, padding: '1.5rem' }}>\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                    <div>\n                      <p style={{\n                        fontSize: '0.875rem',\n                        color: darkMode ? '#9ca3af' : '#6b7280',\n                        marginBottom: '0.25rem'\n                      }}>\n                        {stat.label}\n                      </p>\n                      <p style={{\n                        fontSize: '1.5rem',\n                        fontWeight: '700',\n                        color: darkMode ? 'white' : '#1f2937'\n                      }}>\n                        {stat.value}\n                      </p>\n                    </div>\n                    <Icon style={{ color: stat.color }} size={28} />\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Leads List */}\n          <div style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fill, minmax(400px, 1fr))',\n            gap: '1.5rem'\n          }}>\n            {scoredLeads.map(lead => {\n              const analysis = lead.aiAnalysis;\n              const priorityColor = getPriorityColor(analysis.priority);\n              const RecommendationIcon = analysis.recommendation.icon;\n              \n              return (\n                <div key={lead._id || lead.id} style={{ ...cardStyle, padding: '1.5rem' }}>\n                  {/* Lead Header */}\n                  <div style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    marginBottom: '1rem'\n                  }}>\n                    <div>\n                      <h3 style={{\n                        fontSize: '1.125rem',\n                        fontWeight: '600',\n                        color: darkMode ? 'white' : '#1f2937',\n                        margin: '0 0 0.25rem 0'\n                      }}>\n                        {lead.companyName}\n                      </h3>\n                      <p style={{\n                        color: darkMode ? '#9ca3af' : '#6b7280',\n                        fontSize: '0.875rem',\n                        margin: 0\n                      }}>\n                        {lead.contactPerson}\n                      </p>\n                    </div>\n                    \n                    {/* AI Score */}\n                    <div style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.5rem'\n                    }}>\n                      <div style={{\n                        width: '60px',\n                        height: '60px',\n                        borderRadius: '50%',\n                        background: `conic-gradient(${getScoreColor(analysis.score)} ${analysis.score * 3.6}deg, ${darkMode ? '#374151' : '#e5e7eb'} 0deg)`,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        position: 'relative'\n                      }}>\n                        <div style={{\n                          width: '45px',\n                          height: '45px',\n                          borderRadius: '50%',\n                          background: darkMode ? '#1f2937' : 'white',\n                          display: 'flex',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          fontSize: '0.875rem',\n                          fontWeight: '700',\n                          color: getScoreColor(analysis.score)\n                        }}>\n                          {analysis.score}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Priority Badge */}\n                  <div style={{ marginBottom: '1rem' }}>\n                    <span style={{\n                      padding: '0.5rem 1rem',\n                      borderRadius: '20px',\n                      fontSize: '0.75rem',\n                      fontWeight: '600',\n                      background: priorityColor.bg,\n                      color: priorityColor.text,\n                      border: `1px solid ${priorityColor.border}`\n                    }}>\n                      {analysis.priority} Priority\n                    </span>\n                  </div>\n\n                  {/* AI Recommendation */}\n                  <div style={{\n                    background: darkMode ? '#374151' : '#f9fafb',\n                    padding: '1rem',\n                    borderRadius: '8px',\n                    marginBottom: '1rem'\n                  }}>\n                    <div style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '0.5rem',\n                      marginBottom: '0.5rem'\n                    }}>\n                      <RecommendationIcon \n                        size={16} \n                        style={{ color: analysis.recommendation.color }} \n                      />\n                      <span style={{\n                        fontSize: '0.875rem',\n                        fontWeight: '600',\n                        color: analysis.recommendation.color\n                      }}>\n                        {analysis.recommendation.action}\n                      </span>\n                    </div>\n                    <p style={{\n                      fontSize: '0.875rem',\n                      color: darkMode ? '#d1d5db' : '#374151',\n                      margin: 0\n                    }}>\n                      {analysis.recommendation.message}\n                    </p>\n                  </div>\n\n                  {/* Scoring Factors */}\n                  <div style={{ marginBottom: '1rem' }}>\n                    <h4 style={{\n                      fontSize: '0.875rem',\n                      fontWeight: '600',\n                      color: darkMode ? 'white' : '#1f2937',\n                      marginBottom: '0.5rem'\n                    }}>\n                      Scoring Factors:\n                    </h4>\n                    <div style={{ display: 'flex', flexDirection: 'column', gap: '0.25rem' }}>\n                      {analysis.factors.slice(0, 3).map((factor, index) => (\n                        <div key={index} style={{\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'center'\n                        }}>\n                          <span style={{\n                            fontSize: '0.75rem',\n                            color: darkMode ? '#9ca3af' : '#6b7280'\n                          }}>\n                            {factor.factor}\n                          </span>\n                          <span style={{\n                            fontSize: '0.75rem',\n                            fontWeight: '600',\n                            color: factor.color\n                          }}>\n                            {factor.impact}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n\n                  {/* Action Button */}\n                  <button\n                    onClick={() => setSelectedLead(lead)}\n                    style={{\n                      width: '100%',\n                      padding: '0.75rem',\n                      background: 'linear-gradient(135deg, #8b5cf6, #a855f7)',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '8px',\n                      cursor: 'pointer',\n                      fontSize: '0.875rem',\n                      fontWeight: '500',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      gap: '0.5rem'\n                    }}\n                  >\n                    <Brain size={16} />\n                    View Full Analysis\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n        </>\n      )}\n\n      <style jsx>{`\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default AILeadScoring;"],"names":["_ref","leads","darkMode","scoredLeads","setScoredLeads","useState","isAnalyzing","setIsAnalyzing","selectedLead","setSelectedLead","calculateAIScore","lead","_lead$industry","_lead$leadSource","score","factors","estimatedValue","push","factor","impact","color","includes","industry","toLowerCase","leadSource","hasEmail","email","hasPhone","phone","length","createdDate","Date","now","daysSinceCreated","Math","floor","getTime","finalScore","min","max","priority","recommendation","getRecommendation","action","message","icon","Zap","Clock","Target","useEffect","async","Promise","resolve","setTimeout","analyzed","map","aiAnalysis","sort","a","b","analyzeLeads","getScoreColor","containerStyle","padding","background","minHeight","cardStyle","borderRadius","boxShadow","border","_jsxs","style","children","_jsx","marginBottom","display","alignItems","gap","Brain","size","fontSize","fontWeight","margin","textAlign","width","height","borderTop","animation","_Fragment","gridTemplateColumns","label","value","filter","l","round","reduce","sum","TrendingUp","stat","index","Icon","justifyContent","analysis","priorityColor","bg","text","getPriorityColor","RecommendationIcon","companyName","contactPerson","position","flexDirection","slice","onClick","cursor","_id","id","jsx"],"sourceRoot":""}